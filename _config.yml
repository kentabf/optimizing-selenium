theme: jekyll-theme-cayman
title: Optimizing the threadcount of a multithreaded Selenium web scraper
description: I built a web scraper with Python's Selenium library. With a high I/O time-cost for each query/scrape (anywehere from 4 to 10 seconds), I implemented it as a multithreaded scraper, running multiple webdrivers simultaneously. This project answers the very simple question - what's the optimum threadcount?

### Background
  As part of my work as an economics research assistant, I had to build a web scraper to to make a over 19,000 queries on a webpage. However, I couldn't easily resort to Python's Scrapy library as the data of interest is dynamically generated with JavaScript. To keep things simple, I used the testing framework Selenium to scrape with a webdriver (PhantomJS). 
  However, each query takes from 4 to 10 seconds. Most of this query time came from the I/O with the webdriver. To speed up the whole process, I implemented as a multithreaded scraper with Python's threading library – so that multiple webdrivers can make separate queries simultaneously. (I may have to be more careful with the use of the word "simultaneously", as this program still shares one core).

